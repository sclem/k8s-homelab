repositories:
- name: metallb
  url: https://metallb.github.io/metallb
- name: ingress-nginx
  url: https://kubernetes.github.io/ingress-nginx
- name: external-dns
  url: https://kubernetes-sigs.github.io/external-dns/
- name: nvidia
  url: https://helm.ngc.nvidia.com/nvidia
- name: coredns
  url: https://coredns.github.io/helm
- name: jetstack
  url: https://charts.jetstack.io
- name: k8s-at-home
  url: https://k8s-at-home.com/charts/

releases:
- name: coredns
  labels:
    app: coredns
    system: base
  namespace: kube-system
  chart: coredns/coredns
  version: 1.19.4
  values:
  - extraVolumes:
    - name: private-dns
      configMap:
        name: private-dns-hosts
  - extraVolumeMounts:
    - name: private-dns
      mountPath: /etc/private-dns
  - service:
      # default for k3s
      clusterIP: 10.43.0.10
    # helm show values coredns/coredns
    # adding k8s_external here
    servers:
    - zones:
      - zone: .
      port: 53
      # If serviceType is nodePort you can specify nodePort here
      # nodePort: 30053
      plugins:
      - name: log
      - name: errors
      # Serves a /health endpoint on :8080, required for livenessProbe
      - name: health
        configBlock: |-
          lameduck 5s
      # Serves a /ready endpoint on :8181, required for readinessProbe
      - name: ready
      # Required to query kubernetes API for data
      - name: kubernetes
        parameters: cluster.local in-addr.arpa ip6.arpa
        configBlock: |-
          pods insecure
          fallthrough in-addr.arpa ip6.arpa
          ttl 30
      - name: k8s_external
        parameters: k8s.lan
        # configured with utils/private-dns-updater
      - name: hosts
        parameters: /etc/private-dns/hosts
        configBlock: |-
          fallthrough
      # Serves a /metrics endpoint on :9153, required for serviceMonitor
      - name: prometheus
        parameters: 0.0.0.0:9153
      - name: forward
        parameters: . 1.1.1.1
      - name: cache
        parameters: 30
      - name: loop
      - name: reload
      - name: loadbalance

- name: metallb
  labels:
    app: metallb
    system: base
  namespace: metallb-system
  createNamespace: true
  chart: metallb/metallb
  version: 0.13.4
  values:
  - speaker:
      tolerations:
      - key: cloud
        operator: Equal
        value: vultr
        effect: NoExecute

- name: ingress-nginx-cloud
  labels:
    app: ingress-nginx-cloud
    system: access
  namespace: ingress-nginx-cloud
  createNamespace: true
  chart: ingress-nginx/ingress-nginx
  version: 4.2.0
  values:
  - controller:
      ingressClassResource:
        default: false
        name: nginx-cloud
        controllerValue: k8s.io/ingress-nginx-cloud
      service:
        enabled: true
        annotations:
          metallb.universe.tf/address-pool: cloud
        externalTrafficPolicy: Local
        ipFamilyPolicy: RequireDualStack
        ipFamilies:
          - IPv4
          - IPv6
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cloud
                operator: In
                values:
                - vultr
      ingressClass: nginx-cloud
      tolerations:
      - key: cloud
        operator: Exists
        effect: NoExecute
      dnsPolicy: ClusterFirstWithHostNet
      kind: DaemonSet
      publishService:
        enabled: true

- name: ingress-nginx-cloud-oracle
  labels:
    app: ingress-nginx-cloud-oracle
    system: access
  namespace: ingress-nginx-cloud-oracle
  createNamespace: true
  chart: ingress-nginx/ingress-nginx
  version: 4.2.0
  values:
  - controller:
      ingressClassResource:
        default: false
        name: nginx-cloud-oracle
        controllerValue: k8s.io/ingress-nginx-cloud-oracle
      service:
        enabled: true
        type: NodePort
        nodePorts:
          http: 31080
          https: 31443
        externalTrafficPolicy: Local
        ipFamilyPolicy: RequireDualStack
        ipFamilies:
          - IPv4
          - IPv6
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cloud
                operator: In
                values:
                - oracle
      ingressClass: nginx-cloud-oracle
      tolerations:
      - key: cloud
        operator: Exists
        effect: NoExecute
      dnsPolicy: ClusterFirstWithHostNet
      kind: DaemonSet
      publishService:
        enabled: false

- name: ingress-nginx-lan
  labels:
    app: ingress-nginx-lan
    system: access
  namespace: ingress-nginx-lan
  createNamespace: true
  chart: ingress-nginx/ingress-nginx
  version: 4.2.0
  values:
  - controller:
      ingressClassResource:
        default: true
        name: nginx-lan
        controllerValue: k8s.io/ingress-nginx-lan
      service:
        enabled: true
        annotations:
          metallb.universe.tf/address-pool: skynet
        externalTrafficPolicy: Local
      dnsPolicy: ClusterFirstWithHostNet
      kind: DaemonSet
      publishService:
        enabled: true

- name: ingress-nginx-wg
  labels:
    app: ingress-nginx-wg
    system: access
  namespace: ingress-nginx-wg
  createNamespace: true
  chart: ingress-nginx/ingress-nginx
  version: 4.2.0
  values:
  - controller:
      ingressClassResource:
        default: false
        name: nginx-wg
        controllerValue: k8s.io/ingress-nginx-wg
      service:
        enabled: true
        externalTrafficPolicy: Local
        loadBalancerIP: 100.64.0.6
      nodeSelector:
        kubernetes.io/hostname: videx
      dnsPolicy: ClusterFirstWithHostNet
      kind: DaemonSet
      publishService:
        enabled: true

- name: gpu-operator
  labels:
    app: gpu-operator
    system: base
  namespace: gpu-operator
  chart: nvidia/gpu-operator
  createNamespace: true
  version: v1.11.0
  values:
    - node-feature-discovery:
        worker:
          nodeSelector:
            sclem.dev/enable-gpu: "true"
    - operator:
        defaultRuntime: containerd
    - driver:
        enabled: false
    - toolkit:
        enabled: false

- name: librespeed
  labels:
    app: librespeed
    system: apps
  namespace: home
  chart: k8s-at-home/librespeed
  createNamespace: true
  version: 5.3.2
  values:
  - affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: cloud
              operator: Exists
  - service:
      main:
        type: LoadBalancer
        annotations:
          metallb.universe.tf/address-pool: skynet
  - tolerations:
      - key: cloud
        operator: Exists
        effect: NoExecute

- name: external-dns
  labels:
    app: external-dns
    system: access
  namespace: external-dns
  chart: external-dns/external-dns
  createNamespace: true
  version: 1.10.1
  values:
  - provider: cloudflare
    logLevel: debug
    txtOwnerId: k8s
    extraArgs:
      # only create records for service/ingress with this annotation
      - "--annotation-filter=sclem.dev/external-dns"
    env:
      - name: CF_API_TOKEN
        valueFrom:
          secretKeyRef:
            name: cloudflare-token
            key: token

- name: cert-manager
  labels:
    app: cert-manager
    system: base
  namespace: cert-manager
  chart: jetstack/cert-manager
  createNamespace: true
  version: v1.8.1
  set:
    - name: installCRDs
      value: true

- name: heimdall
  labels:
    app: heimdall
    system: apps
  namespace: home
  createNamespace: true
  chart: k8s-at-home/heimdall
  values:
    - ./values/heimdall.yaml

- name: utils
  labels:
    app: utils
    system: apps
  namespace: default
  chart: ./utils/
  values:
    - ./values/utils.yaml

- name: home
  labels:
    app: home
    system: apps
  namespace: home
  chart: ./home/
  values:
    - ./values/home.yaml

- name: plex
  labels:
    app: plex
    system: apps
  namespace: plex
  chart: ./plex/
  values:
    - ./values/plex.yaml
